---
title: "All_Figures"
format: html
editor: visual
---

```{r}
# Functions -----------------------------------------------------------------------------------

scientific <- function(x) {
  c <- log10(x)
  formatted <- paste0("10^", round(c, 2))
  str2expression(formatted)
}

extract_param <- function (model, par) {
  fit <- (methods::selectMethod("summary", signature = "stanfit"))(object = model, 
                                                                   par = par)
  fit <- fit$summary
  return(fit %>% unlist() %>% as.data.frame %>% round(., 3))
}

extract_matrix <- function (stanMod, param, vector = "mean") {
    dd <- extract_param(stanMod, param)
    nrrow <- str_split(dd %>% rownames(), "\\[") %>% as.data.frame() %>% 
      t() %>% as.data.frame() %>% pull(V2) %>% gsub("\\,\\d+\\]", 
                                                    "", .) %>% as.numeric() %>% max()
    nccol <- str_split(dd %>% rownames(), "\\[\\d+\\,") %>% as.data.frame() %>% 
      t() %>% as.data.frame() %>% pull(V2) %>% gsub("\\]", 
                                                    "", .) %>% as.numeric() %>% max()
    ret <- as.data.frame(matrix(NA, nrrow, nccol)) %>% setNames(c(1:nccol))
    for (i in 1:nrrow) {
      for (j in 1:nccol) {
        ret[i, j] <- extract_param(stanMod, param) %>% 
          filter(rownames(.) == str_subset(rownames(.), paste0("\\[", i, ",", j, "\\]"))) %>% pull(vector)
      }
    }
    return(ret)
}

inverselogit <- function (x) 
{
  return(1/(1 + exp(-x)))
}
```


```{r}
## Libraries
library(tidyverse)
library(corrplot)
library(sf)
library(here)
library(rnaturalearth)
library(MoMAColors);#devtools::install_github("BlakeRMills/MoMAColors")
library(PNWColors);#install.packages("PNWColors")
library(ggspatial)
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
# library(QM)
library(gridGraphics)
library(ggridges)
library(scales)
library(cowplot)
library(magick)
```


```{r}
# Load Data -----------------------------------------------------------------------------------
stan_post <- readRDS(here('CEG_run_nov','Output','jointMod_dm_alpha_fixed_adappt_150_tree_12.rds'))
preds <- read_rds(here('data','all_smooth_predictions_13sp.rds'))

# Raw data
stan_data_joint <- readRDS(here('CEG_run_nov','Input','stan_data_joint.rds'))

# Long format of raw data
raw_data <- stan_data_joint[["sample_data_labeled"]] %>% 
  pivot_longer(cols = sp_1:sp_13,names_to = 'sp',values_to = 'raw_reads')

meta <- readRDS(here('data','metadata','Hake_qPCR_META_after_data_prep.rds'))

# Extract the Log_D
fit <- extract_matrix(stan_post,par = 'log_D') %>% 
  pivot_longer(cols = 1:13,names_to = 'Species',values_to = 'Log_D_est')

# Joining the species name
fit <- fit %>% 
  mutate(species_idx=as.numeric(Species)) %>% 
  select(-Species) %>% 
  left_join(.,stan_data_joint[["sp_list"]],by='species_idx')

# Join the predicted values with raw data
fit <- cbind(fit,raw_data)

# Joing metadata on the predicted values
fit <- fit %>% left_join(.,meta,by='tubeID')

# Load qPCR raw data
qPCR_unk <- stan_data_joint$qpcr_unk

# Load Metabarcoding data
mfu <- read.csv(here('data','mfu_raw.csv'))
# mfu <- read.csv(here('data','mfu_downstream.csv'))
mfu_stan <- stan_data_joint$sample_data_labeled


states <- ne_states(country='United States of America',returnclass = 'sf') %>% 
  filter(name %in% c('California','Oregon','Washington','Nevada')) %>% 
  st_transform("+proj=utm +zone=10 +datum=WGS84 +units=km +no_defs +type=crs")

# Get Canada and transform to the same CRS
canada <- ne_states(country = 'Canada', returnclass = 'sf') %>% 
  filter(name %in% c('British Columbia')) %>% 
  st_transform("+proj=utm +zone=10 +datum=WGS84 +units=km +no_defs +type=crs")

coast_line <- rbind(states, canada)

dat_bbox <- data.frame(xmin=246.1216, ymin=4249.5080, xmax=460.6902, ymax=5365.6749)

sp_list <- sapply(preds, function(df) unique(df[["species"]])) %>% as.vector()


# fit <- read_rds(here('data','log_D_fitted.rds'))
# projected (gridded)
# preds <- read_rds(here('data','all_smooth_predictions_13sp.rds'))

predgrid <- preds[[1]] %>% distinct(grID,depth_cat,x) %>% st_as_sf()

dat_bbox <- preds %>% pluck(1) %>% st_as_sf() %>% st_bbox()

preds_all <- preds %>% list_rbind()

# quantiles of predictions for each species
preds_summ <- preds_all %>% 
  dplyr::select(grID,depth_cat,est,species) %>% 
  group_by(species) %>% 
  mutate(quant=cume_dist(est)) %>% 
  ungroup()

spp_all <- unique(preds_all$species) %>% head(., -1)
spp_all_hake <- unique(preds_all$species)
# spp_cps <- c("Clupea pallasii","Engraulis mordax","Sardinops sagax","Scomber japonicus","Trachurus symmetricus","Thaleichthys pacificus")
# spp_midwater <- c("Leuroglossus stilbius","Stenobrachius leucopsarus","Tactostoma macropus","Tarletonbeania crenularis","Merluccius productus","Sebastes entomelas")

color_mapping <-
  stan_data_joint$sp_list %>% select(-species_idx) %>% 
  mutate(species=if_else(species=='Zz_Merluccius productus','Merluccius productus',species)) %>% 
  mutate(col = case_when(
    species == 'Engraulis mordax' ~ '#F0944C',
    species == 'Scomber japonicus' ~ '#B2B9BC',
    species == 'Sardinops sagax' ~ '#AB4E68',
    species == 'Trachurus symmetricus' ~ '#CDA59B',
    species == 'Thaleichthys pacificus' ~ '#A3A55F',
    species == 'Clupea pallasii' ~ '#41959A',
    species == 'Sebastes entomelas' ~ '#97D8CA',
    species == 'Tarletonbeania crenularis' ~ '#C47688',
    species == 'Stenobrachius leucopsarus' ~ '#679C74',
    species == 'Tactostoma macropus' ~ '#b4e5dd',
    species == 'Leuroglossus stilbius' ~ '#EEB357',
    species == 'Merluccius productus' ~ '#2E92A2',
    species == 'Microstomus pacificus' ~ '#D85A44')) %>% 
  deframe()
```


```{r}
# Figure 1 ------------------------------------------------------------------------------------
plot_list_raw <- list()
plot_list <- list()

for (i in 1:length(sp_list)) {
  plot_list_raw[[i]] <-
    ggplot()+
    geom_sf(data=coast_line,fill='gray80')+
    geom_sf(data=preds[[i]],aes(fill=exp(est)),color=NA)+
    ggtitle(paste0(sp_list[i])) +
    scale_fill_gradientn(
      colors = c(rep('#00496F',5),pnw_palette(name="Bay",n=14,type="continuous"),rep('#DD4124',5)),
      name = "Estimated eDNA\nconcentration\n(copies/Î¼L)",
      trans = log_trans(base = exp(1)),
      limits=c(0.0001,200000),
      breaks = c(0.01,0.1,1, 10, 100, 1000,10000,100000),
      labels = c('0.01','0.1',"1", "10", "100", "1000","10000",'100000')) +
    facet_wrap(~depth_cat,nrow=1)+
    ylim(dat_bbox$ymin, dat_bbox$ymax) +
    scale_x_continuous(
      limits = c(dat_bbox$xmin, dat_bbox$xmax), 
      breaks = c(-125.5, -124)) +
    theme_bw()+
    theme(
      plot.title = element_text(face = "italic"),
      panel.spacing = unit(0.05, "lines"),
      legend.key.height = unit(1.2, "cm"),
      axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
      panel.background = element_rect(fill = 'white'),
      panel.grid.major = element_line(color = "gray80", linetype = "dashed"),
      panel.grid.minor = element_blank(),
      legend.text = element_text(size = 12))
}

legend <- cowplot::get_legend(plot_list_raw[[1]]+theme(legend.justification = c(0,0.5)))
for (i in 1:length(sp_list)) {
  plot_list[[i]] <- plot_list_raw[[i]]+theme(legend.position = "none")
}
plot_list_raw[[1]]

# Load the depth scheme graph
depth_scheme <- image_read(here('plots','QM posterior map','Literature_species_dist.jpg'))
depth_scheme_plot <- ggdraw() + draw_image(depth_scheme)

# Create titles for columns
title_epipelagic <- ggdraw() + 
  draw_plot(
    ggplot() + 
      geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1), fill = "#b65971", color = NA) +
      theme_void()
  ) +
  draw_label("Surface", fontface = 'bold', size = 14, color = "white")

title_mesopelagic <- ggdraw() + 
  draw_plot(
    ggplot() + 
      geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1), fill = "#86a180", color = NA) +
      theme_void()
  ) +
  draw_label("Midwater", fontface = 'bold',size = 14, color = "white")

title_bathypelagic <- ggdraw() + 
  draw_plot(
    ggplot() + 
      geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1), fill = "#559891", color = NA) +
      theme_void()
  ) +
  draw_label("Deepwater", fontface = 'bold',size = 14, color = "white")


pp1 <- 
  cowplot::plot_grid(
    plot_list[[2]]+
      theme(axis.text.x = element_blank(), 
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[7]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[9]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[5]]+
      theme(plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[8]]+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")), 
    plot_list[[4]]+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    nrow = 2,
    rel_widths = c(1.11, 1, 1),
    rel_heights = c(1, 1.2)
)

pp2 <- cowplot::plot_grid(cowplot::plot_grid(ggplot() + theme_void(),title_epipelagic, title_mesopelagic, title_bathypelagic, ncol = 4,rel_widths = c(1,10,10,10)),
                          pp1,
                          nrow = 2, rel_heights = c(0.03, 1))

pp3 <- cowplot::plot_grid(pp2,legend,nrow = 1,rel_widths = c(1,0.15))

fig_1 <- cowplot::plot_grid(pp3,depth_scheme_plot,nrow=2,rel_heights = c(11,7), labels = c('(A)','(B)'),label_x = 0.85)
ggsave(fig_1,here('plots','QM posterior map','Figure 1.jpg'),p,width = 10,height = 13)
```


```{r}
# Figure 2 ------------------------------------------------------------------------------------
pred_corr <-
  preds_all %>%
  mutate(species=ifelse(species=="Zz_Merluccius productus","Merluccius productus",species)) %>% 
  mutate(coor=paste0(utm.lon.km,'-',utm.lat.km,'-',depth_cat)) %>% 
  dplyr::select(species,est,coor) %>% 
  pivot_wider(names_from = "species",values_from="est") %>% as.data.frame() %>% 
  dplyr::select(-coor,-`Merluccius productus`) %>% 
  dplyr::select(c(
    'Scomber japonicus',
    'Sardinops sagax',
    'Engraulis mordax',
    'Thaleichthys pacificus',
    'Trachurus symmetricus',
    'Clupea pallasii',
    'Sebastes entomelas',
    'Tarletonbeania crenularis',
    'Stenobrachius leucopsarus',
    'Tactostoma macropus',
    'Leuroglossus stilbius',
    'Microstomus pacificus')) %>% 
  cor()


temp_file <- tempfile(fileext = ".png");r=2
png(temp_file, width = 800*r, height = 800*r,res = 80*r)

corrplot.mixed(pred_corr,
               tl.pos = 'lt',
               lower = "number",
               upper = 'ellipse',
               addgrid.col = NA,
               tl.col="black")

segments(x0 = 2.5, y0 = 0.5, x1 = 2.5, y1 = 14.5, col = "black", lwd = 1,lty=2)  # Vertical line
segments(x0 = 6.5, y0 = 0.5, x1 = 6.5, y1 = 14.5, col = "black", lwd = 3,lty=2)  # Vertical line
segments(x0 = 9.5, y0 = 0.5, x1 = 9.5, y1 = 14.5, col = "black", lwd = 3,lty=2)  # Vertical line
segments(x0 = -1.5, y0 = 10.5, x1 = 12.5, y1 = 10.5, col = "black", lwd = 1,lty=2)  # Vertical line
segments(x0 = -1.5, y0 = 6.5, x1 = 12.5, y1 = 6.5, col = "black", lwd = 3,lty=2)  # Vertical line
segments(x0 = -1.5, y0 = 3.5, x1 = 12.5, y1 = 3.5, col = "black", lwd = 3,lty=2)  # Vertical line
dev.off()
corrplot_image <- grid::rasterGrob(png::readPNG(temp_file), interpolate = TRUE)

# corrplot_image

fig_2 <- cowplot::plot_grid(
  cowplot::ggdraw(corrplot_image)+
    theme(plot.margin = margin(t = 10, r = 0, b = 0, l = 0))+
    annotation_custom(
      grid::rectGrob(gp = grid::gpar(fill = '#b65971', col = "#b65971")),
      xmin = 0.22, xmax = 0.55, ymin = 0.96, ymax = 1.0)+
    annotation_custom(
      grid::rectGrob(gp = grid::gpar(fill = '#86a180', col = "#86a180")),
      xmin = 0.555, xmax = 0.72, ymin = 0.96, ymax = 1.0)+
    annotation_custom(
      grid::rectGrob(gp = grid::gpar(fill = '#559891', col = "#559891")),
      xmin = 0.725, xmax = 0.9, ymin = 0.96, ymax = 1.0)+
    cowplot::draw_label(
      "Surface", x = 0.365, y = 0.975, hjust = 0, vjust = 0, angle = 0, size = 16,fontface = 'bold',  color = "white")+
    cowplot::draw_label(
      "Midwater", x = 0.605, y = 0.975, hjust = 0, vjust = 0, angle = 0, size = 16,fontface = 'bold',  color = "white")+
    cowplot::draw_label(
      "Deepwater", x = 0.775, y = 0.975, hjust = 0, vjust = 0, angle = 0,size = 16,fontface = 'bold',  color = "white")
)

ggsave(fig_2,
  file = '/Users/gledguri/Local/GitHub/QM-qPCR-joint/plots/2. Figure_2.jpg',
  width = 14,height=14,units='in')
```


```{r}
# Figure 3 ------------------------------------------------------------------------------------

preds_summ %>% filter(!species=='Merluccius productus') %>% 
  ggplot(aes(x = est)) +
  geom_histogram(bins = 100, fill = "grey", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = -2.5), color = "red", linetype = "dashed", size = 0.75) +
  facet_wrap(~species) +
  # ylim(0,4000)+
  # xlim(0,32)+
  labs(x = expression('Log'[e]~'DNA concentration'),
       y = "Number of samples (frequency)") +
  scale_y_log10()+
  theme_bw()

pred_summary <- preds_summ %>% 
  ungroup() %>% 
  mutate(is_abun=quant>=0.75) %>%
  mutate(is_pres=est>-2.5) %>%
  filter(species%in%spp_all) %>% 
  # filter(species=='Merluccius productus') %>%
  group_by(grID,depth_cat) %>% 
  summarise(num_spp=sum(is_pres),
            tot_DNA=sum(exp(est))) %>% 
  ungroup() %>% 
  left_join(predgrid,by=c("grID","depth_cat")) %>% 
  st_as_sf()


species_richness_map <- 
  ggplot() +
  geom_sf(data = coast_line, fill = 'gray80') +
  geom_sf(data = pred_summary, aes(fill = factor(num_spp)), color = NA) +
  scale_fill_viridis_d(option = "D") +
  coord_sf(xlim = c(dat_bbox[1], dat_bbox[3]), 
           ylim = c(dat_bbox[2], dat_bbox[4]), 
           expand = FALSE) +
  facet_wrap(~depth_cat, nrow = 1) +
  labs(fill = "Accumulated number of\nspecies defined as 'present'\non smoothed estimated DNA\n(SDM)") +
  theme_bw() +
  scale_fill_viridis_d(option = "D") +
  theme(
    panel.background = element_rect(fill = 'white'),
    panel.grid.major = element_line(color = "gray80", linetype = "dashed"),
    panel.grid.minor = element_blank())+
  scale_x_continuous(breaks = c(-125.5, -124))

species_richness_map

total_dna_map <- 
  pred_summary %>% 
  ggplot() +
  geom_sf(aes(fill = tot_DNA), color = NA) +  # Keep fill as raw data (normal scale)
  geom_sf(data = coast_line, fill = 'gray80') +
  scale_fill_gradientn(
    colors = c('#00496F','#066384','#33a4a7','#9aca9f','#ffa451','#d7433b'), # Your custom colors
    name = "Accumulated DNA\nconcentration for all species\n(copies / Î¼L)",
    trans = "log10",
    limits=c(1,200000),
    breaks = c(1, 10, 100, 1000,10000,100000),
    labels = c("1", "10", "100", "1000","10000","100000")) +
  coord_sf(xlim = c(dat_bbox[1], dat_bbox[3]), 
           ylim = c(dat_bbox[2], dat_bbox[4]), 
           expand = FALSE) +
  facet_wrap(~depth_cat, nrow = 1) +
  xlim(dat_bbox[1], dat_bbox[3]) +
  ylim(dat_bbox[2], dat_bbox[4]) +
  theme_bw()+
  theme(
    panel.background = element_rect(fill = 'white'),
    panel.grid.major = element_line(color = "gray80", linetype = "dashed"),
    panel.grid.minor = element_blank())+
  scale_x_continuous(breaks = c(-125.5, -124))

fig_3 <- cowplot::plot_grid(species_richness_map,total_dna_map,ncol = 1,align = 'v',labels=c('A','B'))

ggsave('/Users/gledguri/Local/GitHub/QM-qPCR-joint/plots/3. Figure_3.jpg',
       fig_3,h=13,w=8.5,bg='white')
```


```{r}
# Figure 4 -------------------------------------------------------------------------------------


## Figure 4a -----------------------------------------------------------------------------------
facet_colors <- c("Surface-South" = "#b65971","Surface-North" = "#b65971", "Midwater" = "#86a180", "Deepwater" = "#559891")

color_mapping <-
  fit %>% distinct(species) %>% head(-1) %>% pull(species) %>% 
  as.data.frame() %>% setNames('species') %>% 
  mutate(col = case_when(
    species == 'Engraulis mordax' ~ '#F0944C',
    species == 'Scomber japonicus' ~ '#B2B9BC',
    species == 'Sardinops sagax' ~ '#AB4E68',
    species == 'Trachurus symmetricus' ~ '#CDA59B',
    species == 'Thaleichthys pacificus' ~ '#A3A55F',
    species == 'Clupea pallasii' ~ '#41959A',
    species == 'Sebastes entomelas' ~ '#97D8CA',
    species == 'Tarletonbeania crenularis' ~ '#C47688',
    species == 'Stenobrachius leucopsarus' ~ '#679C74',
    species == 'Tactostoma macropus' ~ '#b4e5dd',
    species == 'Leuroglossus stilbius' ~ '#EEB357',
    species == 'Microstomus pacificus' ~ '#D85A44')) %>% 
  deframe()

depth_summary_fit <-
  fit %>% mutate(D_est = exp(Log_D_est)) %>%
  # preds_summ %>% mutate(D_est = exp(est)) %>%
  filter(!species == 'Zz_Merluccius productus') %>% 
  # filter(D_est > exp(-2.5)) %>%
  group_by(depth =  as.factor(depth_cat), species) %>%
  summarize(
    mean_D_est = mean(D_est),
    q_05 = quantile(D_est, 0.025),
    q_95 = quantile(D_est, 0.995),
    .groups = "drop") %>%
  mutate(depth=as.numeric(as.character(depth))*-1) %>%
  mutate(mean_D_est = if_else(mean_D_est<0.1,0.1,mean_D_est)) %>% 
  mutate(q_05 = if_else(q_05<0.1,0.1,q_05)) %>% 
  mutate(q_95 = if_else(q_95<0.1,0.1,q_95)) %>% 
  mutate(guild=
           if_else(species%in%c('Engraulis mordax',
                                'Thaleichthys pacificus',
                                'Clupea pallasii',
                                'Trachurus symmetricus'),
                   'Surface-North',NA)) %>% 
  mutate(guild=
           if_else(species%in%c('Sardinops sagax',
                                'Scomber japonicus'),
                   'Surface-South',guild)) %>% 
  mutate(guild = 
           if_else(species%in%c('Sebastes entomelas',
                                'Tarletonbeania crenularis',
                                'Stenobrachius leucopsarus'),
                   'Midwater',guild)) %>% 
  mutate(guild = 
           if_else(species%in%c('Tactostoma macropus',
                                'Leuroglossus stilbius',
                                'Microstomus pacificus'),
                   'Deepwater',guild)) %>% 
  mutate(guild = factor(guild, levels = c("Surface-South",'Surface-North',"Midwater", "Deepwater"))) %>% 
  mutate(depth_jitter=depth)

depth_summary_fit$species <- factor(depth_summary_fit$species, levels = c(
  'Sardinops sagax',
  'Scomber japonicus',
  'Clupea pallasii',
  'Thaleichthys pacificus',
  'Trachurus symmetricus',
  'Engraulis mordax',
  'Sebastes entomelas',
  'Tarletonbeania crenularis',
  'Stenobrachius leucopsarus',
  'Tactostoma macropus',
  'Leuroglossus stilbius',
  'Microstomus pacificus'
))


# Create subsets for groups
group1 <- c("Sardinops sagax", "Scomber japonicus")
group2 <- c("Clupea pallasii", "Thaleichthys pacificus", "Trachurus symmetricus", "Engraulis mordax")
group3 <- c("Sebastes entomelas", "Tarletonbeania crenularis", "Stenobrachius leucopsarus")
group4 <- c("Tactostoma macropus", "Leuroglossus stilbius", "Microstomus pacificus")

# Legend plots for each group
legend1 <- depth_summary_fit %>%
  ggplot(aes(y = mean_D_est, x = depth_jitter, color = species, group = species)) +
  geom_errorbar(aes(x = depth_jitter, ymin = mean_D_est, ymax = q_95), alpha = 0.4, width = 12, lty = 5) +
  geom_point(size = 3) +
  scale_color_manual(values = color_mapping[group1], breaks = group1, guide = guide_legend(title = "Surface-South")) +
  theme_bw()+
  theme(legend.title = element_text(size = 14),
        legend.text = element_text(size = 12,face = "italic"))

legend2 <- depth_summary_fit %>%
  ggplot(aes(y = mean_D_est, x = depth_jitter, color = species, group = species)) +
  geom_errorbar(aes(x = depth_jitter, ymin = mean_D_est, ymax = q_95), alpha = 0.4, width = 12, lty = 5) +
  geom_point(size = 3) +
  scale_color_manual(values = color_mapping[group2], breaks = group2, guide = guide_legend(title = "Surface-North")) +
  theme_bw()+
  theme(legend.title = element_text(size = 14),
        legend.text = element_text(size = 12,face = "italic"))

legend3 <- depth_summary_fit %>%
  ggplot(aes(y = mean_D_est, x = depth_jitter, color = species, group = species)) +
  geom_errorbar(aes(x = depth_jitter, ymin = mean_D_est, ymax = q_95), alpha = 0.4, width = 12, lty = 5) +
  geom_point(size = 3) +
  scale_color_manual(values = color_mapping[group3], breaks = group3, guide = guide_legend(title = "Midwater")) +
  theme_bw()+
  theme(legend.title = element_text(size = 14),
        legend.text = element_text(size = 12,face = "italic"))

legend4 <- depth_summary_fit %>%
  ggplot(aes(y = mean_D_est, x = depth_jitter, color = species, group = species)) +
  geom_errorbar(aes(x = depth_jitter, ymin = mean_D_est, ymax = q_95), alpha = 0.4, width = 12, lty = 5) +
  geom_point(size = 3) +
  scale_color_manual(values = color_mapping[group4], breaks = group4, guide = guide_legend(title = "Deepwater")) +
  theme_bw()+
  theme(legend.title = element_text(size = 14),
        legend.text = element_text(size = 12,face = "italic"))

# Extract legends
leg1 <- cowplot::get_legend(legend1+theme(legend.justification = c(0.5, -0.75)))
leg2 <- cowplot::get_legend(legend2+theme(legend.justification = c(0.5, -0.2)))
leg3 <- cowplot::get_legend(legend3+theme(legend.justification = c(0.5, 0.7)))
leg4 <- cowplot::get_legend(legend4+theme(legend.justification = c(0.5, 1.5)))

# Combine legends with spacing
final_legend <- cowplot::plot_grid(
  leg1, leg2, leg3, leg4,
  ncol = 1, align = 'v',
  rel_heights = c(1, 1, 1, 1) # Add space between groups
)

cowplot::ggdraw(final_legend)
# 
# final_legend <-
#   cowplot::plot_grid(
#   cowplot::ggdraw() + cowplot::draw_label("Species", fontface = 'bold', size = 14,  x = 0.463, y = -1.25),
#   final_legend,
#   ncol = 1,
#   rel_heights = c(0.2, 1) # Allocate space for the title
# )


p_legend <- depth_summary_fit %>% 
  ggplot(aes(y = mean_D_est, x = depth_jitter, color = species, group = species)) +
  geom_errorbar(aes(x = depth_jitter, ymin = mean_D_est, ymax = q_95), alpha = 0.4, width = 12, lty = 5) +
  geom_point(size = 3) +
  scale_color_manual(values = color_mapping)+
  # labels = c(
  #   "Engraulis mordax" = "Northern Anchovy",
  #   "Sardinops sagax" = "Pacific Sardine",
  #   "Scomber japonicus" = "Chub Mackerel",
  #   'Trachurus symmetricus' = 'Jack Mackerel',
  #   'Thaleichthys pacificus' = 'Eulachon',
  #   "Clupea pallasii" = "Pacific Herring",
  #   'Sebastes entomelas' = 'Sebastes entomelas',
  #   'Tarletonbeania crenularis' = 'Blue Lanternfish',
  #   'Stenobrachius leucopsarus' = 'Northern Lampfish',
  #   'Tactostoma macropus' = 'Dragonfish',
  #   "Leuroglossus stilbius" = "Northern Smoothtongue",
  #   "Microstomus pacificus" = "Dover Sole")) +
  labs(y = "Estimated eDNA concentration (copies/Î¼L)", x = "Depth (m)", color = "Species") +
  theme_bw()

p_leg <- cowplot::get_legend(p_legend+
                               theme(legend.justification = c(0,0.5)))

dep_spec_prob <- purrr::map(
  levels(depth_summary_fit$species), 
  function(x) {
    d <- depth_summary_fit %>%
      # mutate(mean_D_est=log(mean_D_est)-log(0.1)) %>% 
      # mutate(mean_D_est=log(mean_D_est)-log(0.1)) %>% 
      # mutate(mean_D_est=sqrt(mean_D_est)) %>% 
      filter(species == x) %>%
      group_by(species) %>%
      mutate(prop = mean_D_est / sum(mean_D_est)) %>% 
      ungroup() %>% 
      dplyr::select(species,mean_D_est,depth,prop,guild)
    return(d)
  }
)

# Function to sample from each species in the list
sample_from_species <- function(tibble_data, sample_size = 10000) {
  tibble_data %>%
    summarise(
      species = unique(species),
      sampled_dep_values = list(sample(depth, size = sample_size, replace = TRUE, prob = prop))
    )
}

# Sample lat from each each species from the PDF
sampled_data <- lapply(dep_spec_prob, sample_from_species) %>% 
  bind_rows(.) %>%
  unnest(sampled_dep_values) %>% 
  left_join(.,depth_summary_fit %>% ungroup() %>% distinct(species,guild),
            by='species')

plots <- purrr::map(
  levels(depth_summary_fit$guild),
  function(x) {
    p <- depth_summary_fit %>%
      filter(guild == x) %>%
      ggplot(aes(y = mean_D_est, x = depth_jitter, color = species, group = species)) +
      geom_errorbar(aes(x = depth_jitter, ymin = mean_D_est, ymax = q_95), alpha = 0.5, width = 0,size=1 ,lty = 1) +
      geom_point(size = 3,alpha=0.7) +
      # geom_smooth(aes(color = species, group = species), method = "loess", span = 0.5, lty = 1, size = 0.6, alpha = 0.5, se = F) +
      geom_line(aes(color = species, group = species), lty = 1, size = 0.7, alpha = 0.7) +
      facet_grid(~guild, scales = "free_x") +
      scale_color_manual(values = color_mapping) +
      xlim(limits = c(-508,8))+
      scale_y_log10(limits = c(10^-1,10^5)) +
      labs(y = NULL,
           x = "Depth (m)", color = "Species") +
      coord_flip() +
      theme_bw() +
      theme(
        legend.position = 'none',
        strip.text = element_text(face = "bold", size = 12, color = "white"),
        strip.background = element_rect(fill = facet_colors[x], color = "black"),
        # axis.text.x = element_blank(),
        # axis.ticks.x = element_blank(),
        axis.title.y = if (x == levels(depth_summary_fit$guild)[1]) element_text() else element_blank(),
        axis.text.y = if (x == levels(depth_summary_fit$guild)[1]) element_text() else element_blank(),
        axis.ticks.y = if (x == levels(depth_summary_fit$guild)[1]) element_line() else element_blank()
      )
    return(p)
  }
)


# p1 <- cowplot::plot_grid(plotlist = plots, nrow = 1,align='h',rel_widths = c(10,9,9,9))
p1 <-
  cowplot::plot_grid(plotlist = plots, nrow = 1,align='h',rel_widths = c(10,9,9,9)) %>%
  cowplot::ggdraw()+
  theme(plot.margin = margin(t = 2, r = 2, b = 25, l = 2))+
  cowplot::draw_label(
    # expression("Estimated" ~ sqrt("eDNA concentration") ~ "(copies/Î¼L)"), 
    "Estimated eDNA concentration (copies/Î¼L)",
    x = 0.5, y = -0.01,
    hjust = 0.5, vjust = 0.5,
    angle = 0,
    size = 12)

p1

## Figure 4b -----------------------------------------------------------------------------------

lat_summary_fit <-
  fit %>% mutate(D_est = exp(Log_D_est)) %>% 
  filter(!species == 'Merluccius productus') %>% 
  group_by(lat,lon,species) %>% 
  summarize(
    xy_D_est = sum(D_est),
    .groups = "drop") %>% 
  mutate(lat_bin=(round(lat*2)/2)) %>% 
  group_by(lat_bin,species) %>%
  summarise(mean_D=mean(xy_D_est),
            q_2=quantile(xy_D_est,0.025),
            q_97=quantile(xy_D_est,0.975)) %>%
  mutate(guild=
           if_else(species%in%c('Engraulis mordax',
                                'Thaleichthys pacificus',
                                'Clupea pallasii',
                                'Trachurus symmetricus'),
                   'Surface-North',NA)) %>% 
  mutate(guild=
           if_else(species%in%c('Sardinops sagax',
                                'Scomber japonicus'),
                   'Surface-South',guild)) %>% 
  mutate(guild = 
           if_else(species%in%c('Sebastes entomelas',
                                'Tarletonbeania crenularis',
                                'Stenobrachius leucopsarus'),
                   'Midwater',guild)) %>% 
  mutate(guild = 
           if_else(species%in%c('Tactostoma macropus',
                                'Leuroglossus stilbius',
                                'Microstomus pacificus'),
                   'Deepwater',guild)) %>% 
  mutate(mean_D=if_else(mean_D<0.1,0.1,mean_D)) %>%
  mutate(q_97=if_else(q_97<0.1,0.1,q_97)) %>%
  mutate(q_2=if_else(q_2<0.1,0.1,q_2)) %>%
  mutate(guild = factor(guild, levels = c("Surface-South", "Surface-North",'Midwater',"Deepwater"))) 


lat_spec_prob <- purrr::map(
  unique(depth_summary_fit$species),
  function(x) {
    d <- lat_summary_fit %>%
      # mutate(mean_D=log(mean_D)-log(0.1)) %>%
      mutate(mean_D=sqrt(mean_D)) %>%
      filter(species == x) %>%
      group_by(species) %>%
      mutate(prop = mean_D / sum(mean_D)) %>%
      ungroup() %>%
      dplyr::select(species,mean_D,lat_bin,prop)
    return(d)
  }
)

# Function to sample from each species in the list
sample_from_species <- function(tibble_data, sample_size = 1000) {
  tibble_data %>%
    summarise(
      species = unique(species),
      sampled_lat_values = list(sample(lat_bin, size = sample_size, replace = TRUE, prob = prop))
    )
}

# Sample lat from each each species from the PDF
sampled_data <- lapply(lat_spec_prob, sample_from_species) %>% 
  bind_rows(.) %>%
  unnest(sampled_lat_values) %>% 
  left_join(.,lat_summary_fit %>% ungroup() %>% distinct(species,guild),
            by='species')

plots <- 
  purrr::map(
    levels(depth_summary_fit$guild), 
    function(x) {
      p <-sampled_data %>% 
        filter(guild == x) %>% 
        ggplot(aes(y=species,x=sampled_lat_values,fill = species))+
        geom_density_ridges(bandwidth=0.3)+
        scale_fill_manual(values = color_mapping) +
        facet_wrap(~guild)+
        # scale_y_sqrt()+
        coord_flip()+
        labs(x = 'Latitude (Â°)')+
        theme_bw()+
        scale_x_continuous(breaks = seq(38, 50, by = 1),limits=c(38,49)) +
        theme(legend.position = 'none',
              strip.text = element_text(face = "bold", size = 13, color = "white"),
              strip.background = element_rect(fill = facet_colors[x], color = "black"),
              axis.title.y = if (x == levels(lat_summary_fit$guild)[1]) element_text() else element_blank(),
              axis.text.y = if (x == levels(lat_summary_fit$guild)[1]) element_text() else element_blank(),
              axis.ticks.y = if (x == levels(lat_summary_fit$guild)[1]) element_line() else element_blank(),
              axis.title.x = element_blank(),
              axis.text.x = element_blank(),
              axis.ticks.x = element_blank())
      return(p)
    }
  )

p2 <-
  cowplot::plot_grid(plotlist = plots, nrow = 1,align='h',rel_widths = c(2,4,3,3))+
  # cowplot::ggdraw()+
  theme(plot.margin = margin(t = 2, r = 2, b = 25, l = 2))+
  cowplot::draw_line(x = c(0.03, 1.0),y = c(0.68, 0.68),
                     color = "black", size = 0.5, linetype = "dashed") +
  cowplot::draw_line(x = c(0.03, 1.0),y = c(0.515, 0.515),
                     color = "black", size = 0.5, linetype = "dashed") +
  cowplot::draw_label(
    "Columbia river", 
    x = 0.947, y = 0.7, hjust = 0.5, vjust = 0.5, angle = 0, size = 12)+
  cowplot::draw_label(
    "Heceta bank", 
    x = 0.95, y = 0.532, hjust = 0.5, vjust = 0.5, angle = 0, size = 12)+
  cowplot::draw_label(
    "Probability Density Function (PDF) of estimated eDNA concentration (copies/Î¼L)",
    x = 0.5, y = -0.01, hjust = 0.5, vjust = 0.5, angle = 0, size = 12)

p3 <- cowplot::plot_grid(p1,p2,nrow = 2,rel_heights = c(11,16),align = 'v',labels = c('A','B'))
fig_4 <- cowplot::plot_grid(p3,final_legend,ncol = 2,rel_widths = c(6,1.3))
fig_4

ggsave(here('plots','QM posterior map','Figure 4.jpg'),
       fig_4,h=12,w=14,bg='white')
```


```{r}
# Supplementary Figure 1 ----------------------------------------------------------------------
# Load the depth scheme graph
plot_list_raw <- list()
plot_list <- list()

for (i in 1:length(sp_list)) {
  plot_list_raw[[i]] <-
    ggplot()+
    geom_sf(data=coast_line,fill='gray80')+
    geom_sf(data=preds[[i]],aes(fill=exp(est)),color=NA)+
    ggtitle(paste0(sp_list[i])) +
    scale_fill_gradientn(
      colors = c(rep('#00496F',5),pnw_palette(name="Bay",n=14,type="continuous"),rep('#DD4124',5)),
      name = "Estimated eDNA\nconcentration\n(copies/Î¼L)",
      trans = log_trans(base = exp(1)),
      limits=c(0.0001,200000),
      breaks = c(0.01,0.1,1, 10, 100, 1000,10000,100000),
      labels = c('0.01','0.1',"1", "10", "100", "1000","10000",'100000')) +
    facet_wrap(~depth_cat,nrow=1)+
    ylim(dat_bbox$ymin, dat_bbox$ymax) +
    scale_x_continuous(
      limits = c(dat_bbox$xmin, dat_bbox$xmax), 
      breaks = c(-125.5, -124)) +
    theme_bw()+
    theme(
      plot.title = element_text(face = "italic"),
      panel.spacing = unit(0.05, "lines"),
      legend.key.height = unit(1.2, "cm"),
      axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
      panel.background = element_rect(fill = 'white'),
      panel.grid.major = element_line(color = "gray80", linetype = "dashed"),
      panel.grid.minor = element_blank(),
      legend.text = element_text(size = 12))
}

legend <- cowplot::get_legend(plot_list_raw[[1]]+theme(legend.justification = c(0,0.5)))
for (i in 1:length(sp_list)) {
  plot_list[[i]] <- plot_list_raw[[i]]+theme(legend.position = "none")
}
plot_list_raw[[1]]


depth_scheme <- image_read(here('plots','QM posterior map','Literature_species_dist_2.jpg'))
depth_scheme_plot <- ggdraw() + draw_image(depth_scheme)

# Create titles for columns
title_epipelagic <- ggdraw() + 
  draw_plot(
    ggplot() + 
      geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1), fill = "#b65971", color = NA) +
      theme_void()
  ) +
  draw_label("Surface", fontface = 'bold', size = 14, color = "white")

title_mesopelagic <- ggdraw() + 
  draw_plot(
    ggplot() + 
      geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1), fill = "#86a180", color = NA) +
      theme_void()
  ) +
  draw_label("Midwater", fontface = 'bold',size = 14, color = "white")


pp1 <- 
  cowplot::plot_grid(
    plot_list[[1]]+
      theme(axis.text.x = element_blank(), 
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[6]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[3]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[12]]+
      theme(plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[11]]+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")), 
    plot_list[[10]]+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    nrow = 2,
    rel_widths = c(1.11, 1, 1),
    rel_heights = c(1, 1.2)
  )

pp2 <- cowplot::plot_grid(cowplot::plot_grid(ggplot() + theme_void(),title_epipelagic, title_mesopelagic, ncol = 3,rel_widths = c(1,20,10)),
                          pp1,
                          nrow = 2, rel_heights = c(0.03, 1))

pp3 <- cowplot::plot_grid(pp2,legend,nrow = 1,rel_widths = c(1,0.15))

sf1 <- cowplot::plot_grid(pp3,depth_scheme_plot,nrow=2,rel_heights = c(11,7), labels = c('(A)','(B)'),label_x = 0.85)
ggsave(here('plots','QM posterior map','Supplementary Figure 1.jpg'),sf1,width = 10,height = 13)
```


```{r}
# Supplementary Figure 2 ----------------------------------------------------------------------
sf2 <- fit %>% filter(!species=='Zz_Merluccius productus') %>% 
  ggplot(aes(x = Log_D_est)) +
  geom_histogram(bins = 100, fill = "grey", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = -2.5), color = "tomato2", linetype = "dashed", size = 0.75) +
  annotate("text", x = -2.5, y = 15, label = expression(e^-2.5~'DNA concentration'), color = "tomato2", vjust = -0.3, hjust = 0.5, size = 3, angle = 90) +
  annotate("text", x = -7, y = 30, label = "Absence", color = "tomato2", vjust = -0.5, size = 3) +
  annotate("text", x = 2, y = 30, label = "Presence", color = "tomato2", vjust = -0.5, size = 3) +
  ylim(0,32)+
  facet_wrap(~species) + # Facet by species
  labs(x = expression('Log'[e]~'DNA concentration'),
       y = "Number of samples (frequency)") +
  theme_bw()
ggsave(here('plots','QM posterior map','Supplementary Figure 2.jpg'),sf2,h=8,w=10,bg='white')
```


```{r}
# Supplementary Figure 3 ----------------------------------------------------------------------
# 747 unique samples
samp_map_qpcr <- qPCR_unk %>% dplyr::select(tubeID,lat,lon,depth_cat) %>% 
  distinct(tubeID,lat,lon,depth_cat) %>% 
  mutate(group='ALL')

# 555 unique samples
samp_map_MB <- qPCR_unk %>% dplyr::select(tubeID,lat,lon,depth_cat) %>% 
  distinct(tubeID,lat,lon,depth_cat) %>% 
  filter(tubeID%in%mfu$tubeID) %>% 
  mutate(group='MB')

# 357 unique samples
samp_map_MB_stan <- qPCR_unk %>% dplyr::select(tubeID,lat,lon,depth_cat) %>% 
  distinct(tubeID,lat,lon,depth_cat) %>% 
  filter(tubeID%in%mfu_stan$tubeID) %>% 
  mutate(group='MB_stan')

samp_map_raw <- samp_map_qpcr %>% mutate(x=paste0(lat,lon,depth_cat)) %>% 
  anti_join(.,
            samp_map_MB %>% mutate(x=paste0(lat,lon,depth_cat)), by = "x") %>% 
  rbind(.,samp_map_MB %>% mutate(x=paste0(lat,lon,depth_cat))) %>% 
  anti_join(.,
            samp_map_MB_stan %>% mutate(x=paste0(lat,lon,depth_cat)), by = "x") %>% 
  select(-x) %>% 
  rbind(.,samp_map_MB_stan)

samp_map <- samp_map_raw %>% 
  st_as_sf(coords = c("lon", "lat"), crs = 4326, remove = F)

sf3 <-
  ggplot() +
  geom_sf(data = coast_line, fill = 'gray80') +
  geom_sf(data = samp_map %>% filter(depth_cat %in% c(0, 50, 150, 300, 500)),
          aes(color = group, shape = group, size = group)) +
  facet_wrap(~depth_cat, nrow = 1) +
  ylim(dat_bbox$ymin, dat_bbox$ymax) +
  scale_color_manual(
    values = c("ALL" = "deepskyblue1", "MB" = "steelblue4", "MB_stan" = "orangered2"),
    labels = c("qPCR", "Metabarcoding", "Joint samples")
  ) +
  scale_shape_manual(
    values = c("ALL" = 4, "MB" = 4, "MB_stan" = 18)
  ) +
  scale_size_manual(
    values = c("ALL" = 2, "MB" = 2, "MB_stan" = 2)
  ) +
  labs(color = "Sampling coverage") +
  scale_x_continuous(
    limits = c(dat_bbox$xmin, dat_bbox$xmax), 
    breaks = c(-125.5, -124)
  ) +
  guides(
    shape = "none", size = "none") +
  theme_bw() +
  theme(
    legend.text = element_text(size = 13),
    legend.title = element_text(size = 14)
  )

ggsave(here('plots','QM posterior map','Supplementary Figure 3.jpg'),sf3,h=8,w=10,bg='white')
```


```{r}
# Supplementary Figure 4 ----------------------------------------------------------------------
no_hake <- mfu %>%
  filter(grepl('Zz_Merluccius',Species)) %>% 
  group_by(tubeID,Species,lat,lon,depth,depth_cat) %>% 
  summarise(Reads=sum(nReads)) %>%
  ungroup() %>% 
  filter(!(is.na(lat))) %>% 
  filter(Reads==0) %>% 
  pull(tubeID) %>% as.vector()

yes_hake <- mfu %>%
  filter(grepl('Zz_Merluccius',Species)) %>% 
  group_by(tubeID,Species,lat,lon,depth,depth_cat) %>% 
  summarise(Reads=sum(nReads)) %>%
  ungroup() %>% 
  filter(!(is.na(lat))) %>% 
  filter(Reads!=0) %>% 
  pull(tubeID) %>% as.vector()


occ_dat <- mfu %>% 
  group_by(tubeID,Species,lat,lon,depth,depth_cat) %>% 
  summarise(Reads=sum(nReads), .groups = "drop") %>% 
  filter(tubeID%in%no_hake) %>% 
  mutate(pres=if_else(Reads>0,1,0)) %>%
  mutate(tot_samp = n_distinct(tubeID)) %>% 
  group_by(Species,tot_samp) %>% 
  summarise(occ=sum(pres), 
            tot_samp = n_distinct(tubeID),
            occupancy=occ/tot_samp,
            .groups = "drop") %>% 
  mutate(g='Hake absent') %>% 
  rbind(.,
        mfu %>% 
          group_by(tubeID,Species,lat,lon,depth,depth_cat) %>% 
          summarise(Reads=sum(nReads), .groups = "drop") %>% 
          filter(tubeID%in%yes_hake) %>% 
          mutate(pres=if_else(Reads>0,1,0)) %>%
          mutate(tot_samp = n_distinct(tubeID)) %>% 
          group_by(Species,tot_samp) %>% 
          summarise(occ=sum(pres), 
                    tot_samp = n_distinct(tubeID),
                    occupancy=occ/tot_samp,
                    .groups = "drop") %>% 
          mutate(g='Hake present')
  ) %>% as.data.frame()

sf4 <-
  occ_dat %>% filter(!(Species=='Zz_Merluccius productus')) %>%
  filter(!(Species=='Hippoglossus stenolepis')) %>% 
  ggplot(aes(x = Species, y = occupancy, fill = g)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = "Species", y = "Probability of co-occurrance", fill = "Hake occupancy") +
  theme_bw() +
  scale_fill_manual(
    values = c("Hake absent" = "#2e92a2", "Hake present" = "#ECB38E")
  )+
  theme(
    legend.text = element_text(size = 13),
    axis.text.y = element_text(size = 13),
    axis.title.y = element_text(size = 14), 
    axis.title.x = element_blank(), 
    axis.text.x = element_text(angle = 45, hjust = 1, size = 13, face = "italic"),
    legend.title = element_text(size = 14)
  )

ggsave(here('plots','QM posterior map','Supplementary Figure 4.jpg'),
       sf4,h=6,w=10,bg='white')
```


```{r}
# Supplementary Figure 5 ----------------------------------------------------------------------
## Continuous model ----------------------------------------------------------------------------

beta_0_param <- extract_param(stan_post,'beta_std_curve_0') %>% 
  mutate(plate_idx=1:nrow(.))
beta_1_param <- extract_param(stan_post,'beta_std_curve_1') %>% 
  mutate(plate_idx=1:nrow(.))
eq_param <- extract_param(stan_post,'unk_conc_qpcr')

post_pred_qpcr_cm <- stan_data_joint$qpcr_unk %>% 
  left_join(.,beta_0_param %>% select(mean,plate_idx) %>% 
              rename(beta_0='mean'),
            by='plate_idx') %>% 
  left_join(.,beta_1_param %>% select(mean,plate_idx) %>% 
              rename(beta_1='mean'),
            by='plate_idx') %>%
  mutate(beta_0_offset=stan_data_joint$beta_std_curve_0_offset) %>% 
  cbind(.,eq_param %>% select(mean)) %>% 
  rename(eq='mean')

sf5_a <- post_pred_qpcr_cm %>% 
  filter(Ct!=99) %>% 
  mutate(Ct_pred=(beta_0_offset + beta_0) + (beta_1*eq)) %>% 
  ggplot()+
  geom_point(aes(x=Ct,y=Ct_pred),color=color_mapping[13])+
  ylab('Predicted Ct')+
  xlab('Observed Ct')+
  theme_bw()+
  theme(axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(size = 12),
        axis.text.y = element_text(size = 12))

## Detection probability model -----------------------------------------------------------------

phi_0_param <- extract_param(stan_post,'phi_0')
phi_1_param <- extract_param(stan_post,'phi_1')
eq_param <- extract_param(stan_post,'unk_conc_qpcr')

post_pred_qpcr_pd <- stan_data_joint$qpcr_unk %>% 
  # select(-not_int) %>% 
  mutate(phi_0=phi_0_param$mean) %>% 
  mutate(phi_1=phi_1_param$mean) %>%
  cbind(.,eq_param %>% select(mean)) %>% 
  rename(eq='mean') %>% 
  group_by(tubeID) %>%
  mutate(theta = mean(z)) %>% 
  ungroup()

sf5_b <- post_pred_qpcr_pd %>% 
  mutate(theta_pred=phi_0 + phi_1 *exp(eq)) %>% 
  mutate(logit_theta_pred=inverselogit(theta)) %>% 
  ggplot()+
  theme_bw()+
  geom_point(aes(x=theta,y=logit_theta_pred),color=color_mapping[13])+
  ylab('Predicted probability of detection')+
  xlab('Observed probability of detection')+
  theme(axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(size = 12),
        axis.text.y = element_text(size = 12))


## Metabarcoding model -------------------------------------------------------------------------

# Extract the estimated log concentration
post_conc <- extract_matrix(stan_post,'log_D')

# Estimate gamma
pred_logit_val_samp <- t(t(post_conc - post_conc$`13`) +
                           (unique(stan_data_joint$model_vector_a_samp)*stan_data_joint$alpha_fix))

# Estimate species proportions/probabilities
pred_prop_samp <- pred_logit_val_samp %>% as.data.frame() %>% 
  t() %>% softmax_m() %>% t() %>% as.data.frame()

# Generate the predicted number of reads (multinomial random generator function)
pred_reads <- as.data.frame(matrix(NA,nrow = nrow(pred_prop_samp),
                                   ncol = ncol(pred_prop_samp)))
for (i in 1:nrow(pred_prop_samp)) {
  pred_reads[i,] <-
    rmultinom(1, 
              rowSums(stan_data_joint$sample_data)[i], 
              pred_prop_samp[i,]) %>% t() %>% 
    as.data.frame()
}

# Convert data into long format (lf)
pred_reads_lf <- pred_reads %>% `colnames<-`(colnames(stan_data_joint$sample_data)) %>% 
  pivot_longer(
    cols = everything(),         
    names_to = "species_idx_raw",
    values_to = "pred_reads") %>% 
  left_join(.,stan_data_joint$sp_list %>% mutate(species_idx_raw=paste0('sp_',species_idx)),
            by='species_idx_raw') %>% 
  select(-species_idx_raw,-species_idx) %>% 
  mutate(species = if_else(species == 'Zz_Merluccius productus', 'Merluccius productus',species))

obs_reads_lf <- 
  stan_data_joint$sample_data %>% pivot_longer(
    cols = everything(),
    names_to = 'species_idx_raw',
    values_to = 'obs_reads') %>% 
  left_join(.,stan_data_joint$sp_list %>% mutate(species_idx_raw=paste0('sp_',species_idx)),
            by='species_idx_raw') %>% 
  select(-species_idx_raw,-species_idx) %>% 
  mutate(species = if_else(species == 'Zz_Merluccius productus', 'Merluccius productus',species))

# Combine lf data for plotting
comb_reads <- cbind(pred_reads_lf,obs_reads_lf %>% rename(species_2='species'))

legend <- comb_reads %>% 
  ggplot()+
  geom_point(aes(x=obs_reads,y=pred_reads,color=species))+
  labs(color = "Species") +
  theme_bw()+
  scale_color_manual(values = color_mapping)+
  theme(legend.title = element_text(size = 13),
        legend.text = element_text(size = 11,face = "italic"))

leg1 <- cowplot::get_legend(legend+theme(legend.justification = c(0, 0.5)))


sf5_c <-
  comb_reads %>% 
  ggplot()+
  geom_point(aes(x=obs_reads,y=pred_reads,color=species))+
  scale_x_log10(labels=scientific,breaks=10^c(0:6))+
  scale_y_log10(labels=scientific,breaks=10^c(0:6))+
  labs(color = "Species") +
  scale_color_manual(values = color_mapping)+
  ylab('Predicted sequence reads')+
  xlab('Observed sequence reads')+
  theme_bw()+
  theme(legend.position = 'none',
        axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(size = 12),
        axis.text.y = element_text(size = 12))

sf5_raw <-
  cowplot::plot_grid(sf5_a,sf5_b,sf5_c,labels = c('A','B','C'),ncol = 1,align = 'v')

sf5 <-
  cowplot::plot_grid(sf5_raw,leg1,rel_widths = c(7,3))

ggsave(here('plots','QM posterior map','Supplementary Figure 5.jpg'),
       sf5,h=12,w=8,bg='white')
```


```{r}
# Supplementary figure 6 ----------------------------------------------------------------------

plot_list_raw <- list()

plot_list <- list()

for (i in 1:(length(sp_list)-1)) {
  plot_list_raw[[i]] <-
    ggplot() +
    geom_sf(data = coast_line, fill = 'gray80') +
    geom_sf(
      data = fit %>% filter(species == sp_list[i]) %>%
        mutate(si_est = if_else(Log_D_est > -4, 4, 1)) %>%
        st_as_sf(coords = c("lon", "lat"),crs = 4326,remove = F),
      aes(size = si_est, fill = exp(Log_D_est)),shape = 21,color = "black") +
    facet_grid( ~ depth_cat) +
    ggtitle(paste0(sp_list[i])) +
    scale_fill_gradientn(
      colors = c(rep('#00496F', 5),pnw_palette(name = "Bay", n = 14, type = "continuous"),rep('#DD4124', 5)),
      name = "Estimated eDNA\nconcentration\n(copies/Î¼L)",
      trans = log_trans(base = exp(1)),
      limits = c(0.0001, 200000),
      breaks = c(0.01, 0.1, 1, 10, 100, 1000, 10000, 100000),
      labels = c('0.01', '0.1', "1", "10", "100", "1000", "10000", '100000')
    ) +
    scale_size_continuous(
      name = "P/A",
      limits = c(1, 4),
      breaks = c(1, 4),
      labels = c('Absence', 'Presence'),
      range = c(1, 4)
    ) +
    ylim(dat_bbox$ymin, dat_bbox$ymax) +
    scale_x_continuous(limits = c(dat_bbox$xmin, dat_bbox$xmax),
                       breaks = c(-125.5, -124)) +
    theme_bw() +
    theme(
      plot.title = element_text(face = "italic"),
      panel.spacing = unit(0.05, "lines"),
      legend.key.height = unit(1, "cm"),
      axis.text.x = element_text(angle = 90,vjust = 0.5,hjust = 1),
      panel.background = element_rect(fill = 'white'),
      panel.grid.major = element_line(color = "gray80", linetype = "dashed"),
      panel.grid.minor = element_blank(),
      legend.text = element_text(size = 12))
  
  # ggsave(here('plots','QM posterior map',paste0('Supplementary Figure 6_',i,'_',sp_list[i],'_raw.jpg')),width = 7,height = 6)
}

legend <- cowplot::get_legend(plot_list_raw[[1]]+theme(legend.justification = c(0,0.5)))
for (i in 1:(length(sp_list)-1)) {
  plot_list[[i]] <- plot_list_raw[[i]]+theme(legend.position = "none")
}
plot_list_raw[[1]]
plot_list[[1]]


pp1 <-
  cowplot::plot_grid(
    plot_list[[1]]+
      theme(axis.text.x = element_blank(), 
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[2]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[3]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[4]]+
      theme(axis.text.x = element_blank(), 
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[5]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[6]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[7]]+
      theme(axis.text.x = element_blank(), 
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[8]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[9]]+
      theme(axis.text.x = element_blank())+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[10]]+
      theme(plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    plot_list[[11]]+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")), 
    plot_list[[12]]+
      theme(axis.text.y = element_blank(),
            plot.margin = unit(c(0, 0.1, 0, 0), "cm")),
    nrow = 4,
    rel_widths = c(1.11, 1, 1),
    rel_heights = c(1,1,1, 1.2)
  )

sf6 <- cowplot::plot_grid(pp1,legend,nrow = 1,rel_widths = c(1,0.15))

ggsave(sf6,here('plots','QM posterior map','Supplementary Figure 6.jpg'),p,width = 10,height = 14)
```


```{r}
# Supplementary figure 7 ----------------------------------------------------------------------

eu_qpcr <- qPCR_unk %>% 
  as.data.frame() %>% 
  mutate(Ct = if_else(eulachon_Ct == 'Undetermined', NA, eulachon_Ct),
         Ct = as.numeric(Ct)) %>% # Convert to numeric
  group_by(tubeID) %>% 
  summarise(Ct_mean = mean(Ct, na.rm = TRUE)) %>% 
  ungroup() %>% 
  filter(Ct_mean>0)


sf7 <- fit %>% filter(species=='Thaleichthys pacificus') %>% 
  left_join(.,eu_qpcr,by='tubeID') %>% 
  mutate(Ct_mean=if_else(is.na(Ct_mean),(1/0),Ct_mean)) %>% 
  ggplot()+
  geom_point(aes(y=Log_D_est,x=Ct_mean))+
  theme_bw()+
  ylab('Log_D_est for Thaleichthys pacificus')+
  ylim(-2,9)+
  xlab('Ct values of Thaleichthys pacificus')+
  theme(axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(size = 12),
        axis.text.y = element_text(size = 12))

ggsave(sf7,here('plots','QM posterior map','Supplementary Figure 7.jpg'),p,width = 10,height = 10)

```

